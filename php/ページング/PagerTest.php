<?php

require_once dirname(__FILE__).'/Pager.php';

/**
 * Test class for Pager.
 * Generated by PHPUnit on 2012-11-09 at 15:13:31.
 */
class PagerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Pager
     */
//     protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
//         $this->object = new Pager;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @todo Implement testGetCurrentPageNumber().
     */
    public function testGetCurrentPageNumber()
    {
        //-------------------------
        // 正常系
        //-------------------------
        // デフォルト値のチェック
        $pager = new Pager(array());
        $this->assertNull($pager->getCurrentPageNumber());

        $pager = new Pager(array("",""));
        $pager->setPerPage(1);
        @$pager->setCurrentPageNumber(1);
        $this->assertEquals(1, $pager->getCurrentPageNumber());
        $pager->setCurrentPageNumber(2);
        $this->assertEquals(2, $pager->getCurrentPageNumber());

        //-------------------------
        // 異常系
        //-------------------------
        // 有効範囲外のページ番号を登録。setした値が無視されるか。
        // ※WARNINGが発生してテストがfailにならないように@でWARNINGを補足しないようにする。
        $pager = new Pager(array("",""));
        $pager->setPerPage(1);
        @$pager->setCurrentPageNumber(2); // 正常値を設定
        @$pager->setCurrentPageNumber(3); // 異常値を設定
        $this->assertEquals(2, $pager->getCurrentPageNumber());

        @$pager->setCurrentPageNumber(0); // 異常値を設定
        $this->assertEquals(2, $pager->getCurrentPageNumber());
    }

    /**
     * @todo Implement testGetNextPageNumber().
     */
    public function testGetNextPageNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetPrevPageNumber().
     */
    public function testGetPrevPageNumber()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetCurrentPageData().
     */
    public function testGetCurrentPageData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetCurrentPageStartIndex().
     */
    public function testGetCurrentPageStartIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetCurrentPageEndIndex().
     */
    public function testGetCurrentPageEndIndex()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetDataCount().
     */
    public function testGetDataCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testGetPageCount().
     */
    public function testGetPageCount()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
?>
